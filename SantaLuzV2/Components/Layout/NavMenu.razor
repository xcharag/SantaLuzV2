@using SantaLuzV2.Theme
@using Microsoft.AspNetCore.Components.Routing
@rendermode InteractiveServer

<div class="navmenu" style="@ThemeColor.Navy900.ToBackGround()">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon custom-nav-item" />
    <label for="navmenu-toggle" class="navmenu-icon custom-nav-item">
        <FluentIcon
            Value="@(new Icons.Filled.Size20.Navigation())"
            Color="Color.Custom"
            CustomColor="@ThemeColor.Lime500.ToHex()" />
    </label>

    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu"
                       Collapsible="true"
                       Width="250"
                       CollapsedChildNavigation="true"
                       Title="Menu de Navegacion"
                       @bind-Expanded="expanded"
                       CustomToggle="true">

            <!-- User Card (Top) -->
            <FluentCard Class="@($"user-card {(expanded ? "expanded" : "collapsed")}")">
                <div class="user-card-inner">
                    <img src="https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da8402d15866ca7e029c59c61cfa" alt="Usuario" class="user-avatar" />
                    <div class="user-info">
                        <div class="user-name-row">
                            <span class="user-name">Juan Pérez</span>
                            <FluentIcon Value="@(new Icons.Filled.Size20.Settings())"
                                        Color="Color.Custom"
                                        CustomColor="@ThemeColor.Lime500.ToHex()"
                                        Class="user-icon" />
                        </div>
                        <span class="user-role">Administrador</span>
                    </div>
                </div>
            </FluentCard>

            <FluentDivider Class="menu-divider-top" />

            @foreach (var item in _navItems)
            {
                if (item.IsGroup)
                {
                    <FluentNavGroup Title="@item.Text"
                                    Id="@item.id.ToString()"
                                    Tooltip="@item.Tooltip"
                                    Icon="@(item.Icon)"
                                    IconColor="@Color.FillInverse"
                                    CustomColor="@ThemeColor.Lime500.ToHex()"
                                    Class="custom-nav-item">
                        @foreach (var child in item.Children!)
                        {
                            <FluentNavLink Href="@child.Href"
                                           Id="@child.id.ToString()"
                                           Match="NavLinkMatch.All"
                                           Icon="@(child.Icon)"
                                           IconColor="@Color.Custom"
                                           CustomColor="@ThemeColor.Lime500.ToHex()"
                                           Tooltip="@child.Tooltip"
                                           Class="custom-nav-item">
                                @child.Text
                            </FluentNavLink>
                        }
                    </FluentNavGroup>
                }
                else
                {
                    <FluentNavLink Href="@item.Href"
                                   Id="@item.id.ToString()"
                                   Match="NavLinkMatch.All"
                                   Icon="@(item.Icon)"
                                   IconColor="@Color.Custom"
                                   CustomColor="@ThemeColor.Lime500.ToHex()"
                                   Tooltip="@item.Tooltip"
                                   Class="custom-nav-item">
                        @item.Text
                    </FluentNavLink>
                }
            }

            <FluentDivider Class="menu-divider-bottom" />

            <!-- Tipo de Cambio Card (Hidden when collapsed) -->
            <FluentCard Class="@($"exchange-card {(expanded ? "expanded" : "collapsed")}")">
                <div class="exchange-line">
                    <span class="label">Tipo de Cambio USD</span>
                    <span class="value">@TipoCambio.ToString("0.00") Bs</span>
                </div>
            </FluentCard>
        </FluentNavMenu>
    </nav>
</div>

<style>
    .custom-nav-item {
        border-radius: 6px;
        margin: 2px 0;
        transition: background 0.2s;
    }

    .sitenav {
        padding-top: 5px;
        padding-left: 10px;
        padding-right: 10px;
        gap: 10px;
    }

    /* User Card */
    .user-card {
        background: @ThemeColor.BlurCeleste30.ToHex();
        border: 1px solid @ThemeColor.BlurCeleste.ToHex();
        padding: 10px;
        margin: 4px 0 10px 0;
        border-radius: 10px;
        transition: all .25s ease;
    }

    /* Collapsed: remove background & tighten */
    .user-card.collapsed {
        background: transparent;
        border: none;
        padding: 4px;
        margin: 4px 0 6px 0;
        display: flex;
        justify-content: center;
    }

    .user-card .user-card-inner {
        display: flex;
        align-items: center;
        gap: 10px;
        transition: gap .25s ease;
    }

    .user-card.collapsed .user-card-inner {
        gap: 0;
    }

    .user-avatar {
        width: 56px;
        height: 56px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid @ThemeColor.Lime500.ToHex();
        background: @ThemeColor.Navy900.ToHex();
        transition: all .25s ease;
    }

    /* Smaller avatar when collapsed */
    .user-card.collapsed .user-avatar {
        width: 32px;
        height: 32px;
        border-width: 1px;
        filter: drop-shadow(0 0 2px @ThemeColor.Navy900.ToHex());
    }

    .user-info {
        display: flex;
        flex-direction: column;
        line-height: 1.15;
        min-width: 0;
    }

    .user-card.collapsed .user-info,
    .user-card.collapsed .user-icon {
        display: none;
    }

    .user-name-row {
        display: flex;
        align-items: center;
        gap: 6px;
        font-weight: 600;
        font-size: 0.95rem;
        color: @ThemeColor.White.ToHex();
    }

    .user-role {
        font-size: 0.75rem;
        opacity: 0.8;
        color: @ThemeColor.White.ToHex();
    }

    .user-icon svg {
        width: 18px;
        height: 18px;
        display: block;
    }

    /* Exchange Card */
    .exchange-card {
        background: @ThemeColor.BlurCeleste30.ToHex();
        border: 1px solid @ThemeColor.BlurCeleste.ToHex();
        padding: 8px 10px;
        border-radius: 8px;
        font-size: 0.80rem;
        line-height: 1.1;
        margin-top: 10px;
        transition: opacity .2s ease;
    }

    .exchange-card .exchange-line {
        display: flex;
        justify-content: space-between;
        gap: 12px;
        color: @ThemeColor.White.ToHex();
        font-weight: 500;
    }

    .exchange-card .value {
        color: @ThemeColor.Lime500.ToHex();
        font-weight: 600;
        white-space: nowrap;
    }

    .exchange-card.collapsed {
        display: none;
    }

    /* Dividers spacing */
    .menu-divider-top {
        margin: 10px 0 6px 0;
    }

    .menu-divider-bottom {
        margin: 12px 0 4px 0;
    }

    /* Existing styles (kept) */
    .custom-nav-item .positioning-region {
        color: @ThemeColor.White.ToHex();
    }

    .custom-nav-item .fluent-nav-link .positioning-region,
    .fluent-nav-item .positioning-region {
        background: none !important;
    }

    .fluent-nav-item .fluent-nav-link .positioning-region .content-region .fluent-nav-icon {
        fill: @ThemeColor.Lime500.ToHex() !important;
    }

    .fluent-nav-item .fluent-nav-link .positioning-region .content-region .expand-collapse-button .fluent-nav-expand-icon {
        fill: @ThemeColor.Lime500.ToHex() !important;
    }

    .custom-nav-item .positioning-region:hover {
        background: @ThemeColor.BlurCeleste30.ToHex() !important;
    }

    .custom-nav-item .active .positioning-region {
        background: @ThemeColor.BlurCeleste.ToHex() !important;
    }

    .custom-nav-item .fluent-nav-link.active .positioning-region::before {
        background: @ThemeColor.Lime500.ToHex() !important;
    }

    #main-menu-expander svg {
        fill: @ThemeColor.Lime500.ToHex() !important;
    }

    .custom-nav-item.fluent-nav-group .fluent-icon,
    .custom-nav-item.fluent-nav-group .fluent-icon svg {
        color: @ThemeColor.Lime500.ToHex() !important;
        fill: @ThemeColor.Lime500.ToHex() !important;
    }
</style>

@code {
    private bool expanded = true;
    private double TipoCambio = 6.96;

    private sealed record NavItem(
        int id,
        string Text,
        string Tooltip,
        Icon Icon,
        string? Href = null,
        IReadOnlyList<NavItem>? Children = null)
    {
        public bool IsGroup => Children is { Count: > 0 };
    }

    private readonly IReadOnlyList<NavItem> _navItems =
    [
        new NavItem(1,"Panel de Control", "Panel de Control", new Icons.Filled.Size20.Clover(), "/"),
        new NavItem(2,"Ventas", "Ventas", new Icons.Filled.Size20.Cart(),
            Children:
            [
                new NavItem(3,"Cotizaciones", "Cotizaciones", new Icons.Filled.Size20.DocumentFlowchart(), "/ventas/cotizaciones"),
                new NavItem(4,"Reservas", "Reservas", new Icons.Filled.Size20.CalendarLtr(), "/ventas/reservas"),
                new NavItem(5,"Contratos", "Contratos", new Icons.Filled.Size20.Signature(), "/ventas/contratos")
            ]),
        new NavItem(6,"Caja", "Caja", new Icons.Filled.Size20.Money(), "/caja"),
        new NavItem(7,"Proyectos", "Inventario", new Icons.Filled.Size20.BoxMultiple(), "/proyectos"),
        new NavItem(8,"Personas", "Personas", new Icons.Filled.Size20.PeopleCommunity(),
            Children:
            [
                new NavItem(9,"Trabajadores", "Trabajadores", new Icons.Filled.Size20.ShareScreenPersonP(), "/ventas/personal"),
                new NavItem(10,"Clientes", "Clientes", new Icons.Filled.Size20.PersonMoney(), "/ventas/clientes"),
            ]),
        new NavItem(11,"Configuracion", "Configuracion", new Icons.Filled.Size20.Settings(), "/configuracion"),
        new NavItem(12,"Cerrar Sesion", "Cerrar Sesion", new Icons.Filled.Size20.SignOut(), "/cerrar-sesion")
    ];
}